<?xml version="1.0" encoding="UTF-8"?>
<!-- This file is part of Tryton.  The COPYRIGHT file at the top level of
this repository contains the full copyright notices and license terms. -->
<Document xmlns="urn:iso:std:iso:20022:tech:xsd:pain.008.001.02"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:py="http://genshi.edgewall.org/">
    <xi:include href="base.xml"/>
    <!-- version 2 uses BIC instead of BICFI -->
    <py:def function="FinancialInstitution(bank, only_bic=False)">
                    <FinInstnId>
                        <BIC py:if="bank.bic">${bank.bic}</BIC>
                        <py:if test="not only_bic">
                            <!-- ClrSysMmbId -->
                            <Nm>${bank.party.name[:140]}</Nm>
                            <py:with vars="address = bank.party.address_get()">
                                <PstlAdr py:if="address">
                                    ${PostalAddress(address)}
                                </PstlAdr>
                            </py:with>
                        </py:if>
                        <Othr py:if="not bank.bic">
                            <Id>NOTPROVIDED</Id>
                        </Othr>
                    </FinInstnId>
                    <!-- BrnchId -->
    </py:def>
    <CstmrDrctDbtInitn>
        <GrpHdr>
            <MsgId>${(datetime.datetime.now().strftime("%Y%m%d%H%M%S") + "ALONS" + pain.company.sepa_creditor_identifier)[-35:]}</MsgId>
            <CreDtTm>${datetime.datetime.now().isoformat()}</CreDtTm>
            <!-- Authstn -->
            <NbOfTxs>${sum(len(payments) for _, payments in pain.sepa_payments)}</NbOfTxs>
            <CtrlSum>${'{:.2f}'.format(sum([payment.amount for group in pain.groups for payment in group.payments]))}</CtrlSum>
            <!-- PmtTpInf -->
            <!-- ReqdColltnDt -->
            <InitgPty>
                ${PartyIdentification(pain.company)}
            </InitgPty>
            <!-- FwdgAgt -->
        </GrpHdr>
        <py:for="key, payments in pain.sepa_payments">
        <PmtInf>
            <PmtInfId>${(key['date'].strftime("%Y%m%d%H%M%S") + key['sequence_type'] + '-' + key['group'].company.sepa_creditor_identifier)[-35:]}</PmtInfId>
            <PmtMtd>DD</PmtMtd>
            <BtchBookg>${'true' if key['group'].sepa_batch_booking else 'false'}</BtchBookg>
            <NbOfTxs>${len(payments)}</NbOfTxs>
            <CtrlSum>${'{:.2f}'.format(sum(p.amount for p in payments))}</CtrlSum>
            <PmtTpInf>
                <!-- InstrPrty -->
                <SvcLvl>
                    <Cd>SEPA</Cd>
                    <!-- Prtry -->
                </SvcLvl>
                <LclInstrm>
                    <Cd>${key['scheme']}</Cd>
                    <!-- Prtry -->
                </LclInstrm>
                <SeqTp>${key['sequence_type']}</SeqTp>
                <!-- CtgyPurp -->
            </PmtTpInf>
            <ReqdColltnDt>${key['date'].isoformat()}</ReqdColltnDt>
            <Cdtr>
                ${PartyIdentification(key['group'].company, id=False)}
            </Cdtr>
            <CdtrAcct>
                ${Account(key['group'].account_number)}
            </CdtrAcct>
            <CdtrAgt>
                ${FinancialInstitution(key['group'].account_number.account.bank, only_bic=True)}
            </CdtrAgt>
            <!-- CdtrAgtAcct -->
            <!-- UltmtCdtr -->
            <ChrgBr>${key['group'].sepa_charge_bearer}</ChrgBr>
            <!-- ChrgsAcct -->
            <!-- ChrgsAcctAgt -->
            <CdtrSchmeId>
              <Id>
                <PrvtId>
                  <Othr>
                    <Id>${key['group'].company.sepa_creditor_identifier}</Id>
                    <SchmeNm>
                       <Prtry>SEPA</Prtry>
                    </SchmeNm>
                  </Othr>
                </PrvtId>
              </Id>
            </CdtrSchmeId>
            <py:for each="payment in payments">
            <DrctDbtTxInf>
                <PmtId>
                    <EndToEndId>${payment.sepa_end_to_end_id}</EndToEndId>
                </PmtId>
                <!-- PmtTpInf -->
                <InstdAmt py:attrs="{'Ccy': payment.currency.code}">${'{:.2f}'.format(payment.amount)}</InstdAmt>
                <!-- ChrgBr --> <!-- EPC only at payment information level -->
                <DrctDbtTx>
                    <MndtRltdInf py:with="mandate = payment.sepa_mandate">
                        <MndtId>${mandate.identification}</MndtId>
                        <DtOfSgntr>${mandate.signature_date.isoformat()}</DtOfSgntr>
                        <!-- AmdmntInd -->
                        <!-- AmdmntInfDtls -->
                        <!-- ElctrncSgntr -->
                        <!-- FrstColltnDt -->
                        <!-- FnlColltnDt -->
                        <!-- Frqcy -->
                    </MndtRltdInf>
                    <!-- CdtrSchmeId -->
                    <!-- PreNtfctnId -->
                    <!-- PreNtfctnDt -->
                </DrctDbtTx>
                <!-- UltmtCdtr -->
                <DbtrAgt>
                    ${FinancialInstitution(payment.sepa_mandate.account_number.account.bank, only_bic=True)}
                </DbtrAgt>
                <!-- DbtrAgtAcct -->
                <Dbtr>
                    ${PartyIdentification(payment.sepa_mandate, id=False)}
                </Dbtr>
                <DbtrAcct>
                    ${Account(payment.sepa_mandate.account_number, currency=False)}
                </DbtrAcct>
                <!-- UltmtDbtr -->
                <!-- InstrForCdtrAgt -->
                <!-- Purp -->
                <!-- RgltryRptg -->
                <!-- Tax -->
                <!-- RltdRmtInf -->
                <RmtInf py:if="payment.description">
                    <Ustrd>${payment.description[:140]}</Ustrd>
                </RmtInf>
            </DrctDbtTxInf>
            </py:for>
        </PmtInf>
    </CstmrDrctDbtInitn>
</Document>
